# Advanced Breach Benchmarking Configuration
# Integrates with Enhanced CSP security infrastructure

benchmark_config:
  name: "Enhanced CSP Network Security Assessment"
  version: "1.0.0"
  
  # Target system configuration
  target_system:
    primary_host: "localhost"
    primary_port: 8000
    backup_hosts: ["csp-node-1", "csp-node-2"]
    
  # Integration with existing Enhanced CSP components
  csp_integration:
    threat_detection_api: "http://localhost:8001/api/threat-detection"
    security_monitoring_api: "http://localhost:8002/api/monitoring"
    visualizer_api: "http://localhost:8003/api/visualizer"
    alert_system_api: "http://localhost:8004/api/alerts"
    
  # Network topology (matches your Enhanced CSP setup)
  network_topology:
    nodes:
      - id: "csp_web_gateway"
        type: "web_gateway"
        security_level: "high"
        services: ["http", "https", "websocket"]
        vulnerabilities: []
        monitoring_enabled: true
        
      - id: "csp_process_orchestrator"
        type: "orchestrator"
        security_level: "critical"
        services: ["process_management", "communication"]
        vulnerabilities: []
        monitoring_enabled: true
        
      - id: "csp_security_engine"
        type: "security"
        security_level: "critical"
        services: ["threat_detection", "anomaly_analysis"]
        vulnerabilities: []
        monitoring_enabled: true
        
      - id: "csp_database_cluster"
        type: "database"
        security_level: "critical"
        services: ["postgresql", "redis"]
        vulnerabilities: []
        monitoring_enabled: true
        
      - id: "csp_visualization_server"
        type: "visualization"
        security_level: "medium"
        services: ["real_time_dashboard", "metrics"]
        vulnerabilities: []
        monitoring_enabled: true
        
      - id: "csp_load_balancer"
        type: "load_balancer"
        security_level: "high"
        services: ["nginx", "ssl_termination"]
        vulnerabilities: []
        monitoring_enabled: true
        
    edges:
      - source: "csp_load_balancer"
        target: "csp_web_gateway"
        type: "https"
        encrypted: true
        firewall_rules: ["allow_443", "rate_limit_1000_per_min"]
        
      - source: "csp_web_gateway"
        target: "csp_process_orchestrator"
        type: "internal_api"
        encrypted: true
        firewall_rules: ["internal_only"]
        
      - source: "csp_process_orchestrator"
        target: "csp_security_engine"
        type: "security_api"
        encrypted: true
        firewall_rules: ["critical_services_only"]
        
      - source: "csp_security_engine"
        target: "csp_database_cluster"
        type: "database_connection"
        encrypted: true
        firewall_rules: ["encrypted_db_only"]
        
      - source: "csp_visualization_server"
        target: "csp_database_cluster"
        type: "read_only_db"
        encrypted: true
        firewall_rules: ["read_only_access"]

# Advanced breach scenarios specific to CSP architecture
advanced_scenarios:
  
  # CSP-specific attack scenarios
  - id: "csp_process_injection"
    name: "CSP Process Injection Attack"
    category: "process_manipulation"
    description: "Attempt to inject malicious processes into CSP communication channels"
    target_components: ["csp_process_orchestrator"]
    severity: "critical"
    expected_detection_time: 5.0
    payload:
      attack_vectors: ["process_creation", "message_injection", "channel_hijacking"]
      malicious_processes: ["unauthorized_data_reader", "channel_interceptor"]
      
  - id: "csp_communication_tampering"
    name: "CSP Communication Channel Tampering"
    category: "communication_attack"
    description: "Attempt to tamper with inter-process communication"
    target_components: ["csp_process_orchestrator", "csp_web_gateway"]
    severity: "high"
    expected_detection_time: 3.0
    payload:
      tampering_methods: ["message_modification", "channel_flooding", "protocol_confusion"]
      
  - id: "csp_state_corruption"
    name: "CSP State Corruption Attack"
    category: "state_manipulation"
    description: "Attempt to corrupt shared state in distributed CSP processes"
    target_components: ["csp_database_cluster", "csp_process_orchestrator"]
    severity: "critical"
    expected_detection_time: 10.0
    payload:
      corruption_targets: ["process_state", "communication_buffers", "synchronization_primitives"]
      
  - id: "csp_deadlock_induction"
    name: "CSP Deadlock Induction Attack"
    category: "availability_attack"
    description: "Attempt to create deadlocks in CSP process networks"
    target_components: ["csp_process_orchestrator"]
    severity: "high"
    expected_detection_time: 15.0
    payload:
      deadlock_methods: ["circular_wait", "resource_exhaustion", "priority_inversion"]

# Benchmark execution settings
execution_settings:
  
  # Parallel execution configuration
  parallelization:
    enabled: true
    max_concurrent_scenarios: 3
    scenario_isolation: true
    resource_limits:
      cpu_limit: "2"
      memory_limit: "4Gi"
      
  # Timing configuration
  timing:
    baseline_duration: 60  # seconds
    scenario_timeout: 300   # seconds
    cooldown_between_scenarios: 10  # seconds
    
  # Data collection
  data_collection:
    metrics_interval: 1  # seconds
    log_level: "INFO"
    capture_network_traffic: true
    capture_system_calls: false  # Enable for deeper analysis
    
  # Safety mechanisms
  safety:
    auto_stop_on_critical_impact: true
    max_cpu_usage: 90  # percent
    max_memory_usage: 85  # percent
    emergency_shutdown_timeout: 30  # seconds

# Integration with Enhanced CSP monitoring
monitoring_integration:
  
  # Real-time monitoring hooks
  real_time_monitoring:
    enabled: true
    update_interval: 5  # seconds
    metrics_to_track:
      - "process_count"
      - "message_queue_depth"
      - "communication_latency"
      - "error_rate"
      - "security_alert_count"
      
  # Alert integration
  alert_integration:
    forward_to_csp_alerts: true
    alert_severity_mapping:
      info: "LOW"
      warning: "MEDIUM"
      error: "HIGH"
      critical: "CRITICAL"
      
  # Visualization integration
  visualization:
    update_topology_view: true
    highlight_attack_paths: true
    show_impact_metrics: true
    real_time_dashboard_updates: true

# Reporting configuration
reporting:
  
  # Report formats
  output_formats: ["json", "pdf", "html"]
  
  # Report sections
  sections:
    executive_summary: true
    technical_details: true
    risk_assessment: true
    compliance_mapping: true
    remediation_roadmap: true
    
  # Compliance frameworks
  compliance_frameworks:
    - name: "NIST Cybersecurity Framework"
      mapping_file: "nist_mapping.yaml"
    - name: "ISO 27001"
      mapping_file: "iso27001_mapping.yaml"
    - name: "GDPR"
      mapping_file: "gdpr_mapping.yaml"
      
  # Custom metrics
  custom_metrics:
    csp_process_integrity_score:
      description: "Measure of CSP process integrity during attacks"
      calculation: "weighted_average"
      weights:
        process_stability: 0.4
        communication_reliability: 0.3
        state_consistency: 0.3
        
    csp_resilience_score:
      description: "Overall system resilience to CSP-specific attacks"
      calculation: "composite"
      components:
        - "detection_effectiveness"
        - "recovery_time"
        - "service_availability"

# Performance benchmarking
performance_benchmarks:
  
  # Baseline performance targets
  baseline_targets:
    message_throughput: 10000  # messages per second
    process_creation_time: 0.05  # seconds
    communication_latency: 0.001  # seconds
    state_synchronization_time: 0.01  # seconds
    
  # Performance impact thresholds
  impact_thresholds:
    acceptable_degradation: 0.2  # 20%
    warning_degradation: 0.5     # 50%
    critical_degradation: 0.8    # 80%
    
  # Load testing scenarios
  load_scenarios:
    - name: "normal_load"
      concurrent_processes: 100
      message_rate: 1000
      duration: 300
      
    - name: "high_load"
      concurrent_processes: 500
      message_rate: 5000
      duration: 300
      
    - name: "stress_load"
      concurrent_processes: 1000
      message_rate: 10000
      duration: 180

# Advanced analytics
analytics:
  
  # Machine learning integration
  ml_analysis:
    enabled: true
    models:
      - name: "anomaly_detection"
        type: "isolation_forest"
        features: ["cpu_usage", "memory_usage", "network_io", "process_count"]
        
      - name: "attack_classification"
        type: "random_forest"
        features: ["request_pattern", "payload_signature", "timing_pattern"]
        
  # Predictive analytics
  predictive_analytics:
    enabled: true
    prediction_horizon: 300  # seconds
    metrics_to_predict:
      - "system_overload_probability"
      - "attack_success_likelihood"
      - "recovery_time_estimate"
      
  # Behavioral analysis
  behavioral_analysis:
    enabled: true
    baseline_learning_period: 3600  # seconds
    anomaly_threshold: 0.8
    behavioral_models:
      - "user_interaction_patterns"
      - "system_usage_patterns"
      - "network_communication_patterns"

# Integration testing
integration_testing:
  
  # API testing
  api_testing:
    enabled: true
    endpoints_to_test:
      - "/api/processes"
      - "/api/communications"
      - "/api/security/alerts"
      - "/api/monitoring/metrics"
      
  # Database testing
  database_testing:
    enabled: true
    test_types:
      - "injection_attacks"
      - "privilege_escalation"
      - "data_exfiltration"
      
  # Network testing
  network_testing:
    enabled: true
    test_scenarios:
      - "man_in_the_middle"
      - "packet_injection"
      - "protocol_fuzzing"

# Cleanup and restoration
cleanup:
  
  # Automatic cleanup
  auto_cleanup:
    enabled: true
    cleanup_after_each_scenario: true
    cleanup_timeout: 60  # seconds
    
  # System restoration
  restoration:
    restore_database_state: true
    restart_services: true
    clear_temporary_files: true
    reset_network_configurations: false  # Keep network config intact
    
  # Verification
  post_cleanup_verification:
    enabled: true
    verification_tests:
      - "service_health_check"
      - "database_integrity_check"
      - "network_connectivity_check"
      - "performance_baseline_check"
