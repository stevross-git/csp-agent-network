<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Enhanced CSP System - Azure AD Login</title>
    <script src="https://alcdn.msauth.net/browser/2.38.3/js/msal-browser.min.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #1a1a2e 0%, #16213e 50%, #0f3460 100%);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            overflow: hidden;
            position: relative;
        }

        /* Animated Background */
        .bg-animation {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: 
                radial-gradient(circle at 20% 50%, rgba(255, 107, 53, 0.1) 0%, transparent 50%),
                radial-gradient(circle at 80% 20%, rgba(0, 204, 255, 0.1) 0%, transparent 50%),
                radial-gradient(circle at 40% 80%, rgba(0, 255, 136, 0.1) 0%, transparent 50%);
            animation: backgroundPulse 10s ease-in-out infinite;
        }

        @keyframes backgroundPulse {
            0%, 100% { opacity: 0.7; }
            50% { opacity: 1; }
        }

        /* Particles */
        .particles {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
        }

        .particle {
            position: absolute;
            width: 2px;
            height: 2px;
            background: rgba(255, 255, 255, 0.5);
            border-radius: 50%;
            animation: float 20s infinite linear;
        }

        @keyframes float {
            0% {
                transform: translateY(100vh) translateX(0);
                opacity: 0;
            }
            10% {
                opacity: 1;
            }
            90% {
                opacity: 1;
            }
            100% {
                transform: translateY(-100px) translateX(100px);
                opacity: 0;
            }
        }

        /* Login Container */
        .login-container {
            background: rgba(30, 30, 60, 0.95);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 107, 53, 0.3);
            border-radius: 20px;
            padding: 3rem 2.5rem;
            max-width: 450px;
            width: 90%;
            box-shadow: 
                0 20px 40px rgba(0, 0, 0, 0.3),
                0 0 0 1px rgba(255, 255, 255, 0.1);
            position: relative;
            z-index: 10;
        }

        /* Header */
        .login-header {
            text-align: center;
            margin-bottom: 2.5rem;
        }

        .login-logo {
            font-size: 3rem;
            margin-bottom: 1rem;
            animation: logoFloat 3s ease-in-out infinite;
        }

        @keyframes logoFloat {
            0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-10px); }
        }

        .login-title {
            color: #ffffff;
            font-size: 1.8rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
        }

        .login-subtitle {
            color: #cccccc;
            font-size: 0.95rem;
            margin-bottom: 1rem;
        }

        .azure-badge {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            background: linear-gradient(45deg, #0078d4, #106ebe);
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-size: 0.85rem;
            font-weight: 500;
            margin-top: 1rem;
        }

        /* Authentication Status */
        .auth-status {
            text-align: center;
            margin-bottom: 2rem;
            padding: 1rem;
            border-radius: 10px;
            display: none;
        }

        .auth-status.loading {
            background: rgba(0, 204, 255, 0.1);
            border: 1px solid #00ccff;
            color: #00ccff;
            display: block;
        }

        .auth-status.success {
            background: rgba(0, 255, 136, 0.1);
            border: 1px solid #00ff88;
            color: #00ff88;
            display: block;
        }

        .auth-status.error {
            background: rgba(255, 107, 53, 0.1);
            border: 1px solid #ff6b35;
            color: #ff6b35;
            display: block;
        }

        /* Login Options */
        .login-options {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .azure-login-btn {
            background: linear-gradient(45deg, #0078d4, #106ebe);
            color: white;
            border: none;
            padding: 1rem 1.5rem;
            border-radius: 10px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.75rem;
            position: relative;
            overflow: hidden;
        }

        .azure-login-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(0, 120, 212, 0.3);
        }

        .azure-login-btn:active {
            transform: translateY(0);
        }

        .azure-login-btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
        }

        .btn-spinner {
            width: 20px;
            height: 20px;
            border: 2px solid transparent;
            border-top: 2px solid currentColor;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            display: none;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        .divider {
            text-align: center;
            margin: 1.5rem 0;
            position: relative;
            color: #888;
        }

        .divider::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 0;
            right: 0;
            height: 1px;
            background: rgba(255, 255, 255, 0.2);
        }

        .divider span {
            background: rgba(30, 30, 60, 0.95);
            padding: 0 1rem;
            font-size: 0.85rem;
        }

        /* Demo Mode Toggle */
        .demo-toggle {
            text-align: center;
            margin-top: 1rem;
        }

        .demo-btn {
            background: rgba(255, 107, 53, 0.1);
            border: 1px solid rgba(255, 107, 53, 0.3);
            color: #ff6b35;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            cursor: pointer;
            font-size: 0.9rem;
            transition: all 0.3s ease;
        }

        .demo-btn:hover {
            background: rgba(255, 107, 53, 0.2);
            border-color: #ff6b35;
        }

        /* Demo Credentials Panel */
        .demo-panel {
            margin-top: 1.5rem;
            padding: 1.5rem;
            background: rgba(0, 0, 0, 0.3);
            border-radius: 10px;
            border: 1px solid rgba(255, 107, 53, 0.2);
            display: none;
        }

        .demo-panel.active {
            display: block;
        }

        .demo-title {
            color: #ff6b35;
            font-size: 0.9rem;
            font-weight: 600;
            margin-bottom: 1rem;
            text-align: center;
        }

        .demo-creds {
            background: rgba(0, 0, 0, 0.5);
            padding: 0.75rem;
            border-radius: 6px;
            margin-bottom: 0.75rem;
            font-family: monospace;
            font-size: 0.85rem;
            color: #cccccc;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .demo-creds:hover {
            background: rgba(255, 107, 53, 0.1);
            transform: translateX(5px);
        }

        /* User Info Display */
        .user-info {
            background: rgba(0, 255, 136, 0.1);
            border: 1px solid #00ff88;
            border-radius: 10px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            display: none;
        }

        .user-info.active {
            display: block;
        }

        .user-avatar {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background: linear-gradient(45deg, #00ff88, #00ccff);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            margin: 0 auto 1rem;
        }

        .user-details {
            text-align: center;
            color: #00ff88;
        }

        .user-name {
            font-size: 1.1rem;
            font-weight: 600;
            margin-bottom: 0.25rem;
        }

        .user-email {
            font-size: 0.9rem;
            opacity: 0.8;
            margin-bottom: 0.5rem;
        }

        .user-role {
            background: rgba(0, 255, 136, 0.2);
            padding: 0.25rem 0.75rem;
            border-radius: 15px;
            font-size: 0.8rem;
            display: inline-block;
        }

        /* Footer */
        .login-footer {
            text-align: center;
            margin-top: 2rem;
            padding-top: 1.5rem;
            border-top: 1px solid rgba(255, 107, 53, 0.3);
        }

        .footer-text {
            color: #888888;
            font-size: 0.8rem;
            margin-bottom: 0.5rem;
        }

        .security-note {
            color: #00ff88;
            font-size: 0.75rem;
            font-style: italic;
        }

        /* Responsive Design */
        @media (max-width: 480px) {
            .login-container {
                margin: 1rem;
                padding: 2rem 1.5rem;
            }
            
            .login-title {
                font-size: 1.5rem;
            }
            
            .login-logo {
                font-size: 2.5rem;
            }
        }
    </style>
</head>
<body>
    <!-- Animated Background -->
    <div class="bg-animation"></div>
    
    <!-- Particles -->
    <div class="particles" id="particles"></div>

    <!-- Login Container -->
    <div class="login-container">
        <!-- Header -->
        <div class="login-header">
            <div class="login-logo">🚀</div>
            <h1 class="login-title">Enhanced CSP System</h1>
            <p class="login-subtitle">AI-to-AI Communication Platform</p>
            <div class="azure-badge">
                <span>🔐</span>
                <span>Azure AD Secured</span>
            </div>
        </div>

        <!-- Authentication Status -->
        <div id="auth-status" class="auth-status">
            <div id="status-message">Initializing authentication...</div>
        </div>

        <!-- User Info (shown when authenticated) -->
        <div id="user-info" class="user-info">
            <div class="user-avatar" id="user-avatar">👤</div>
            <div class="user-details">
                <div class="user-name" id="user-name">Loading...</div>
                <div class="user-email" id="user-email">Loading...</div>
                <div class="user-role" id="user-role">Loading...</div>
            </div>
        </div>

        <!-- Login Options -->
        <div id="login-options" class="login-options">
            <button id="azure-login-btn" class="azure-login-btn">
                <span id="btn-text">🔐 Sign in with Microsoft</span>
                <div id="btn-spinner" class="btn-spinner"></div>
            </button>

            <div class="divider">
                <span>or</span>
            </div>

            <div class="demo-toggle">
                <button id="demo-toggle-btn" class="demo-btn">
                    🧪 Use Demo Mode (Development Only)
                </button>
            </div>
        </div>

        <!-- Demo Credentials Panel -->
        <div id="demo-panel" class="demo-panel">
            <div class="demo-title">🧪 Demo Credentials (Development Only)</div>
            <div class="demo-creds" data-username="admin" data-password="csp2025!">
                <strong>Administrator:</strong> admin / csp2025!
            </div>
            <div class="demo-creds" data-username="developer" data-password="dev123!">
                <strong>Developer:</strong> developer / dev123!
            </div>
            <div class="demo-creds" data-username="analyst" data-password="analyst123!">
                <strong>Analyst:</strong> analyst / analyst123!
            </div>
            <div class="demo-creds" data-username="user" data-password="user123!">
                <strong>User:</strong> user / user123!
            </div>
        </div>

        <!-- Action Buttons (shown when authenticated) -->
        <div id="action-buttons" class="login-options" style="display: none;">
            <button id="dashboard-btn" class="azure-login-btn">
                <span>📊 Go to Dashboard</span>
            </button>
            <button id="logout-btn" class="demo-btn" style="margin-top: 0.5rem;">
                <span>🚪 Sign Out</span>
            </button>
        </div>

        <!-- Footer -->
        <div class="login-footer">
            <div class="footer-text">Enhanced CSP System v2.1.0</div>
            <div class="security-note">🔐 Enterprise-grade security with Azure AD</div>
        </div>
    </div>

    <script>
        // Azure AD Configuration
        const msalConfig = {
            auth: {
                clientId: "53537e30-ae6b-48f7-9c7c-4db20fc27850", // Your Azure AD client ID
                authority: "https://login.microsoftonline.com/622a5fe0-fac1-4213-9cf7-d5f6defdf4c4", // Your tenant ID
                redirectUri: window.location.origin,
            },
            cache: {
                cacheLocation: "sessionStorage",
                storeAuthStateInCookie: false,
            }
        };

        const loginRequest = {
            scopes: ["User.Read", "User.ReadBasic.All"]
        };

        // Initialize MSAL
        const msalInstance = new msal.PublicClientApplication(msalConfig);

        // User roles mapping
        const USER_ROLES = {
            SUPER_ADMIN: 'super_admin',
            ADMIN: 'admin',
            DEVELOPER: 'developer',
            ANALYST: 'analyst',
            USER: 'user'
        };

        // Demo users (for development)
        const demoUsers = {
            'admin': { password: 'csp2025!', role: USER_ROLES.ADMIN, name: 'System Administrator' },
            'developer': { password: 'dev123!', role: USER_ROLES.DEVELOPER, name: 'Developer User' },
            'analyst': { password: 'analyst123!', role: USER_ROLES.ANALYST, name: 'Data Analyst' },
            'user': { password: 'user123!', role: USER_ROLES.USER, name: 'Regular User' }
        };

        // Application state
        let currentUser = null;
        let isDemoMode = false;

        // DOM elements
        const authStatus = document.getElementById('auth-status');
        const statusMessage = document.getElementById('status-message');
        const userInfo = document.getElementById('user-info');
        const loginOptions = document.getElementById('login-options');
        const actionButtons = document.getElementById('action-buttons');
        const azureLoginBtn = document.getElementById('azure-login-btn');
        const demoToggleBtn = document.getElementById('demo-toggle-btn');
        const demoPanel = document.getElementById('demo-panel');
        const dashboardBtn = document.getElementById('dashboard-btn');
        const logoutBtn = document.getElementById('logout-btn');

        // Initialize particles
        function createParticles() {
            const particlesContainer = document.getElementById('particles');
            const particleCount = 50;

            for (let i = 0; i < particleCount; i++) {
                const particle = document.createElement('div');
                particle.className = 'particle';
                particle.style.left = Math.random() * 100 + '%';
                particle.style.animationDelay = Math.random() * 20 + 's';
                particle.style.animationDuration = (15 + Math.random() * 10) + 's';
                particlesContainer.appendChild(particle);
            }
        }

        // Show status message
        function showStatus(message, type = 'loading') {
            statusMessage.textContent = message;
            authStatus.className = `auth-status ${type}`;
        }

        // Hide status message
        function hideStatus() {
            authStatus.className = 'auth-status';
        }

        // Show user info
        function showUserInfo(user) {
            document.getElementById('user-name').textContent = user.name || user.displayName || 'Unknown User';
            document.getElementById('user-email').textContent = user.email || user.username || 'No email';
            document.getElementById('user-role').textContent = user.role || 'User';
            
            // Set avatar
            const avatar = document.getElementById('user-avatar');
            const initials = (user.name || user.displayName || 'U').split(' ').map(n => n[0]).join('').toUpperCase();
            avatar.textContent = initials;

            userInfo.classList.add('active');
            loginOptions.style.display = 'none';
            actionButtons.style.display = 'block';
        }

        // Hide user info
        function hideUserInfo() {
            userInfo.classList.remove('active');
            loginOptions.style.display = 'block';
            actionButtons.style.display = 'none';
        }

        // Set loading state for button
        function setButtonLoading(button, loading) {
            const text = button.querySelector('#btn-text');
            const spinner = button.querySelector('#btn-spinner');
            
            if (loading) {
                text.style.display = 'none';
                spinner.style.display = 'block';
                button.disabled = true;
            } else {
                text.style.display = 'block';
                spinner.style.display = 'none';
                button.disabled = false;
            }
        }

        // Get user role from Azure AD info
        function getUserRole(account) {
            const email = account.username || account.idTokenClaims?.preferred_username || '';
            
            // Map based on email domain or Azure AD groups
            if (email.includes('admin@')) return USER_ROLES.SUPER_ADMIN;
            if (email.includes('dev@')) return USER_ROLES.DEVELOPER;
            if (email.includes('analyst@')) return USER_ROLES.ANALYST;
            
            // Default role
            return USER_ROLES.USER;
        }

        // Azure AD Login
        async function azureLogin() {
            try {
                setButtonLoading(azureLoginBtn, true);
                showStatus('Redirecting to Microsoft sign-in...', 'loading');

                const loginResponse = await msalInstance.loginPopup(loginRequest);
                const account = loginResponse.account;

                // Get additional user info
                const userRole = getUserRole(account);
                
                currentUser = {
                    id: account.homeAccountId,
                    name: account.name || account.idTokenClaims?.name,
                    email: account.username,
                    role: userRole,
                    loginTime: new Date().toISOString(),
                    authMethod: 'azure_ad'
                };

                // Store session
                sessionStorage.setItem('csp_azure_session', JSON.stringify(currentUser));

                showStatus('Authentication successful!', 'success');
                setTimeout(() => {
                    hideStatus();
                    showUserInfo(currentUser);
                }, 2000);

            } catch (error) {
                console.error('Azure login failed:', error);
                setButtonLoading(azureLoginBtn, false);
                showStatus(`Login failed: ${error.message}`, 'error');
                
                setTimeout(() => {
                    hideStatus();
                }, 5000);
            }
        }

        // Demo login
        function demoLogin(username, password) {
            const user = demoUsers[username.toLowerCase()];
            
            if (user && user.password === password) {
                currentUser = {
                    id: username,
                    name: user.name,
                    email: `${username}@demo.csp.ai`,
                    role: user.role,
                    loginTime: new Date().toISOString(),
                    authMethod: 'demo'
                };

                sessionStorage.setItem('csp_demo_session', JSON.stringify(currentUser));
                showUserInfo(currentUser);
                showStatus('Demo login successful!', 'success');
                
                setTimeout(() => {
                    hideStatus();
                }, 2000);

                return true;
            }
            return false;
        }

        // Logout
        async function logout() {
            try {
                if (currentUser?.authMethod === 'azure_ad') {
                    await msalInstance.logoutPopup();
                    sessionStorage.removeItem('csp_azure_session');
                } else {
                    sessionStorage.removeItem('csp_demo_session');
                }

                currentUser = null;
                isDemoMode = false;
                hideUserInfo();
                hideStatus();
                demoPanel.classList.remove('active');

            } catch (error) {
                console.error('Logout failed:', error);
            }
        }

        // Go to dashboard
        function goToDashboard() {
            if (currentUser) {
                // In a real implementation, this would redirect to the actual dashboard
                alert(`Redirecting to dashboard...\n\nUser: ${currentUser.name}\nRole: ${currentUser.role}\nAuth: ${currentUser.authMethod}`);
                // window.location.href = '/dashboard';
            }
        }

        // Check for existing session
        function checkExistingSession() {
            const azureSession = sessionStorage.getItem('csp_azure_session');
            const demoSession = sessionStorage.getItem('csp_demo_session');

            if (azureSession) {
                currentUser = JSON.parse(azureSession);
                showUserInfo(currentUser);
            } else if (demoSession) {
                currentUser = JSON.parse(demoSession);
                showUserInfo(currentUser);
                isDemoMode = true;
            }
        }

        // Event listeners
        azureLoginBtn.addEventListener('click', azureLogin);

        demoToggleBtn.addEventListener('click', () => {
            isDemoMode = !isDemoMode;
            demoPanel.classList.toggle('active');
            demoToggleBtn.textContent = isDemoMode ? 
                '❌ Hide Demo Mode' : 
                '🧪 Use Demo Mode (Development Only)';
        });

        // Demo credentials click handlers
        document.addEventListener('click', (e) => {
            if (e.target.closest('.demo-creds')) {
                const creds = e.target.closest('.demo-creds');
                const username = creds.dataset.username;
                const password = creds.dataset.password;
                
                if (demoLogin(username, password)) {
                    demoPanel.classList.remove('active');
                    isDemoMode = false;
                    demoToggleBtn.textContent = '🧪 Use Demo Mode (Development Only)';
                }
            }
        });

        dashboardBtn.addEventListener('click', goToDashboard);
        logoutBtn.addEventListener('click', logout);

        // Initialize application
        async function initializeApp() {
            try {
                await msalInstance.initialize();
                createParticles();
                checkExistingSession();
                
                if (!currentUser) {
                    showStatus('Ready to sign in', 'loading');
                    setTimeout(hideStatus, 2000);
                }
            } catch (error) {
                console.error('App initialization failed:', error);
                showStatus('Initialization failed. Please refresh the page.', 'error');
            }
        }

        // Handle redirect response from Azure AD
        msalInstance.handleRedirectPromise().then((response) => {
            if (response) {
                console.log('Redirect response received:', response);
                // Handle successful redirect login
            }
        }).catch((error) => {
            console.error('Redirect error:', error);
        });

        // Start the application
        document.addEventListener('DOMContentLoaded', initializeApp);

        // Export authentication functions for use in other parts of the application
        window.CSPAuth = {
            getCurrentUser: () => currentUser,
            isAuthenticated: () => currentUser !== null,
            logout: logout,
            getUserRole: () => currentUser?.role || USER_ROLES.USER,
            hasPermission: (permission) => {
                // Implement permission checking logic based on user role
                const rolePermissions = {
                    [USER_ROLES.SUPER_ADMIN]: ['*'],
                    [USER_ROLES.ADMIN]: ['system.view', 'user.manage', 'ai.manage'],
                    [USER_ROLES.DEVELOPER]: ['system.view', 'ai.view', 'quantum.view'],
                    [USER_ROLES.ANALYST]: ['system.view', 'reports.view'],
                    [USER_ROLES.USER]: ['system.view']
                };
                
                const userPermissions = rolePermissions[currentUser?.role] || [];
                return userPermissions.includes('*') || userPermissions.includes(permission);
            }
        };
    </script>
</body>
</html>